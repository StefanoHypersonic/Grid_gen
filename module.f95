
MODULE GEOM_2D_TYPES

    REAL*8, ALLOCATABLE:: IC(:,:)
    REAL*8, ALLOCATABLE:: PT(:,:)


    REAL*8, ALLOCATABLE:: TIC(:,:)
    REAL*8, ALLOCATABLE:: TPT(:,:)


      TYPE CELL ! cell
        INTEGER ICC(2) ! nx,ny  !AUXILIARY
        INTEGER IPT(4) ! VERTICES
        INTEGER IS(4)  ! SURFACE.
        INTEGER ISD(4) ! +/-1 RN OF OUTLET/INLET

        REAL*8 XC(2) ! CENTER CELL COORDINATE
        REAL*8 SUP   ! SURFACE
        REAL*8 BLAT  ! LATERAL BOUNDARY

        REAL*8 a
        REAL*8 rho
        REAL*8 u,v
        REAL*8 TS
        REAL*8 PS


    END TYPE CELL

    TYPE BORDO
      INTEGER IPT(2)      ! VERTICES
      INTEGER ICP,ICM     ! CELL PLUS/MINUS
      INTEGER IDIRP,IDIRM ! DIRECTION 1=NXdir 2 =NYdir
      REAL*8 RN(2)        ! Normal UNIT VECTOR
    END TYPE BORDO

END MODULE GEOM_2D_TYPES

!	**********************************************
MODULE GRID
    REAL*8 DCHI,DETA,DELTAX,DELTAY
    REAL*8 H_G,H_P
END MODULE GRID

! *************************************************
MODULE GEOM_2D

    USE GEOM_2D_TYPES

    INTEGER, PARAMETER:: NDIM=2
    INTEGER, PARAMETER:: NV_FACE = 2  ! NUMBER OF  VERTICES FOR EACH FACE
    INTEGER, PARAMETER:: NV_VOL  = 4  ! NUMBER OF VERTICES FOR EACH VOLUME
    INTEGER, PARAMETER:: NFACE   = 4  ! NUMBER OF FACE FOR EACH CELL

    INTEGER NSF! TOTAL NUMBER OF SURFACE
    INTEGER NSI! TOTAL NUMBER OF INTERNAL SURFACE
    INTEGER NSB! TOTAL NUMBER OF BOUNDARY SURFACE
    INTEGER NCL! TOTAL NUMBER OF CELL CL
    INTEGER NPT! TOTAL NUMBER OF POINTS PT

    TYPE(CELL)    ,POINTER :: CL(:)! CELL IN THE X,Y SYSTEM   1:NSI = INTERNAL , NSI+1:NSF = BOUNDARY
    TYPE(BORDO)   ,POINTER :: BF(:)! BOUNDARY OF THE CELL IN THE X,Y COORDINATE

    TYPE(CELL)    ,POINTER :: TCL(:)! CELL IN THE CHI,ETA SYSTEM   1:NSI = INTERNAL , NSI+1:NSF = BOUNDARY
    TYPE(BORDO)   ,POINTER :: TBF(:)! BOUNDARY OF THE CELL IN THE CHI,ETA COORDINATE


    INTEGER NXC,NYC
    INTEGER NCF
    INTEGER ISIDE(2,2)

END MODULE GEOM_2D

MODULE FILENAMES

     CHARACTER*50 FILE_NAME,OUT_FILE,LOG_FILE

END MODULE FILENAMES

MODULE PARAMETERS1


   REAL*8 , PARAMETER :: gamma = 1.403;
   REAL*8 , PARAMETER :: cv = 0.7177;          ! J/(g*K)
   REAL*8 , PARAMETER :: cp = 1.007;           !

END MODULE PARAMETERS1

MODULE TIMES

    INTEGER K,KMAX,NCST                 ! k= CURRENT ITERATION INDEX; KMAX= MAXIMUM ITERATION INDEX ; NCST= CURRENT CELL INDEX
    REAL*8 TIMEEQ,TIME_MAX,CFL          ! TIMEEQ= K*DT; TIME_MAX=KMAX*DT; CFL IS A*DT/DX

END MODULE TIMES


